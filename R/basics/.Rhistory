2+2
2+2
2+2+3
2+2
20%1
20%%1
20%%20
20%%10
20%%2
20%%5
20%%8
6^10
s <- 'stringy'
s
x <- 123
s+x
s,x
x <- 123
x <- 12
z = 'zee'
a = c[1,2,3,4]
a = c(1,2,3,4)
a
a*3
a
x[2]
x(2)
a[2]
a[4]
a(2) = 1003
fix(a)
a[2]
a = c(0:100)
a
b = 0:100
data.frame( date=(31,1,2,3), mood=('good','bad', 'ugly','meh') )
data.frame( date=c(31,1,2,3), mood=c('good','bad', 'ugly','meh') )
d = data.frame( date=c(31,1,2,3), mood=c('good','bad', 'ugly','meh') )
d
d[1,2]
d[1,3]
d[2,2]
d[2,]
d2 = data.frame( date=c(31,1,2,3), mood=c('good','bad', 'ugly','meh'), temp=c('79', 32, 101, 40) )
d2
d2[1,3]
d2[1,3]+10
d2[2,3]+10
d2[2,3]
d2[2,3]*2
spx500 <- read.csv("~/Sites/bloomberg/econo/data/spx500.csv")
viewData(spx500)
spx500
sp
sp <- read.csv("~/Sites/bloomberg/econo/data/spx500.csv")
h = 'hlllo'
h = 'hlllo'
h
h
sp
head(sp)
less(sp)
more(sp)
tail(sp)
print i
print(i)
print(i)
}
}
}
for (i in 0:9) {
print(i)
}
print(i*i)
}
}
}
}
+  print(i*i)
}
}
}
}
}
}
+  print(i*i)}
print(i*i)
print(i)
}
}
}
sp = read.csv("~/Sites/bloomberg/econo/data/spx500.csv")
tail(sp)
for (i in 0:9) {
print(i)
}
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages('gdata')
system("hows it?")
system("howsit?")
system('howsit?')
babies = sf[sf$age == 1,]
sf = read.csv("http://compute-cuj.org/dm/stop.csv")
babies = sf[sf$age == 1,]
rstudio::viewData(babies)
rstudio::viewData(babies)
elderly = sf[sf$age >= 99,]
rstudio::viewData(elderly)
rstudio::viewData(elderly)
sf$dob=12311900
sum(sf$dob=12311900)
sum(sf$dob==12311900)
sum(sf$dob==12311900)
sum(sf$dob==1231190)
sum(sf$dob==12311901)
sum(sf$dob==12311900)
sum(sf$dob==123119995)
sum(sf$dob==12311995)
sum(sf$dob==12311900)
dobs = as.characters(sf$dob)
dobs = as.characters(sf$dob)
dobs = as.character(sf$dob)
head(dobs)
dobs[1]
dobs[1][1]
dobs[1][:]
dobs[1][-1]
dobs[1][-2]
dobs[1][-3]
dobs[1,2]
dobs[1]
substr(dobs, -5)
substring(dobs, -5)
table(nchar(dobs))
dobs = as.character(sf$dob)
dobs = as.character(sf$dob)
year = ifelse( nchar(dobs)==7, substring(dobs,4), substring(dobs,5), )
year = ifelse( nchar(dobs)==7, substring(dobs,4), substring(dobs,5) )
year
year = as.numeric(year)
year
2012-year = 2012-year
hist(2012-year-sf$age)
summary(sf)
sf$year-of-birth = year
sf$yearob = year
rm(list=ls())
x <- 1
x
x = 2
x
x <- 1
x <- 10
x
x = 2
x
x <- 1
x
x = 2
x
x <- 1
x
x = 2
x
vector = c(1, 2, 3, 4, 5)
vector
help('c')
sequence = 0:10
sequence2 = seq(0, 10, by = 2)
sequence
sequence = 0:10
sequence
sequence2 = seq(0, 10, by = 2)
sequence
sequence2
seq(0:10, by=2)
seq(0, 10)
seq(0, 'shoe')
sequence[2:4]
sequence[0:4]
sequence[1:4]
sequence[2:4]
sequence[3:4]
sequence[4:4]
sequence[5:4]
sequence[:4]
print "hello"
print("hello")
repetition = rep(c(1, 2, 3), times = 8)
repetition
repetition = rep(0:10, times = 8)
repetition
repetition = rep(c(1, 2, 3), times = 8)
repetition = rep(c(1, 2, 3), times = 8)
c(1, 2, 3)
c(1, 2, 3)
element.4 = sequence[4]
element.4
element.4.and.6 = sequence[c(4, 6)]
element.4.and.6
no.3rd.element = sequence[-3]
no.3rd.element
element.4 = sequence[4]
sequence = 0:10
element.4 = sequence[4]
element.4
element.4 = sequence[4]
element.4
element.4
element.4 +20
element.4
element.4
element.4.and.6 = sequence[c(4, 6)]
element.4.and.6
no.3rd.element = sequence[-3]
no.3rd.element
sample(sequence, 20, replace = TRUE) # Replace means values can repeat
sequence
sample(sequence, 20, replace = TRUE) # Replace means values can repeat
sample(sequence, 10, replace = FALSE) # No repeating values
# Matrices
sample(sequence, 10, replace = FALSE) # No repeating values
matrix = matrix(1:9, nrow = 3, ncol = 3, byrow = TRUE)
matrix
1:9
matrix = matrix(1:9, nrow = 3, ncol = 3, bycol = TRUE)
matrix = matrix(1:9, nrow = 3, ncol = 3, byrow = FALSE)
matrix
matrix = matrix(1:9, nrow = 3, ncol = 4, byrow = FALSE)
3
matrix = matrix(1:9, nrow = 3, ncol = 3, byrow = FALSE)
matrix
matrix = matrix(sequence, nrow = 3, ncol = 3, byrow = FALSE)
row2.col2 = matrix[2, 2]
row2.col2 = matrix[-2, -2]
row2.col2
row2.col2 = matrix[2, -2]
row2.col2
row2.col2 = matrix[1, -2]
row2.col2
row.3 = matrix[3, ]
row.3
min(sequence)
max(sequence)
mean(sequence)
median(sequence)
quantile(sequence, .25)
quantile(sequence, .75)
summary(sequence)
summary(matrix)
random = runif(1)
random
random = runif(4)
random = runif(3, min=0, max=100)
random
random = floor(runif(10, min=0, max=101))
sort(random)
random = floor(runif(10, min=0, max=101))
random
sort(random)
hist(random)
random = sample(1:6, 25, replace=TRUE)
random
table(random)
barplot(table(random), main="Random Values", xlab="value", ylab="frequency")
barplot(table(random), main="Random Values", xlab="value", ylab="frequency")
hist(random)
barplot(table(random), main="Random Values", xlab="value", ylab="frequency")
hist(random)
plot(table(random))
random = runif(20, min=0, max=100)
random
matrix = matrix(random, nrow = 10, ncol = , byrow = TRUE)
matrix
plot(matrix)
plot(table(random))
plot(matrix)
x = 2
x = 'cheese'
x
mean(sequence)
average(sequence)
average = function(the.vector){ # Start the function
average = function(the.vector){ # Start the function
S = sum(the.vector) # Step one: Take the sum of all elements in the.vector.
L = length(the.vector) # Step two: Find no. of elements in the.vector.
A = S/L # Divide to get the average.
return(A) # Only return the final result.
}
average(sequence)
matrix = matrix(random, nrow = 10, ncol = , byrow = TRUE)
q
:q
trials = 50 # 50 trials
x = seq(0, trials, by = 1)
y = dbinom(x, trials, .2) # n = 50, p = .2.
plot(x, y)
y = dbinom(x, trials, .6) # n = 50, p = .6.
plot(x, y)
x = seq(0, trials, by = 1)
y = qnorm(x, trials, .2) # n = 50, p = .2.
plot(x, y)
set.seed(123456)
rnorm(10)
rnorm(10)
rnorm(10)
rnorm(10)
rnorm(10)
set.seed(123456)
rnorm(10)
setwd("~/Desktop/Dataviz101/R/basics/")
sf = read.csv("data/stop.csv")
View(sf)
View(sf)
head(sf)
tail(sf)
n = names(sf)
n
class(n)
class(1)
class('text')
n[1:10]
gender = sf[,"sex"]
gender
gender = sf[,"sex"]
gender = sf[,"sex"]
gender
sarah = sf[,c("sex", "city")]
sarah
table(sf[,"sex"]) #will output a count of the resulting values
sarah = sf[,c("sex", "cityzzz")]
gender == 1 #outputs TRUE or FALSE for each item in the vector
gender = sf[,"sex"]
gender
gender == 1 #outputs TRUE or FALSE for each item in the vector
mf = gender == 1 # test for males
mf
boys = sf[mf,] #will only return TRUE results, in this case men
mf
boys = sf[mf,] #will only return TRUE results, in this case men
boys
sf[,"sex"]
sf$sex
table(mf,useNA="always")
table(sf$sex, sf$eyecolor)
table(sf$crimsusp, sf$sex)
plot(table(sf$age))
table(sf$age) # more stange data entry errors
hist(sf$age)
hist(sf$age, breaks=20) # breaks defaults to 10
hist(sf$age, breaks=200) # breaks defaults to 10
hist(sf$age, breaks=20) # breaks defaults to 10
hist(sf$age)
hist(sf$age, breaks=20) # breaks defaults to 10
babies = sf[sf$age == 1,]
babies
babies
sum(sf$dob==12311900) #many default dates of birth 12/31/1900
dobs = as.character(sf$dob)
dobs
as.character(1234)
substring(dobs,4)
substring("1234567890",4)
substring("1234567890",5)
substring("1234567890", [0:2])
substring("1234567890", 0:2)
year = ifelse( nchar(dobs)==7, substring(dobs,4), substring(dobs,5) )
year
ifelse( c(0:10)==3, TRUE, FALSE )
ifelse( c(0:10)==3, TRUE, FALSE )
ifelse( c(0:10)==3, TRUE, FALSE )
nchar('tenletters')
year = as.numeric(year)
year
ifelse( c(0:10)==3, TRUE, FALSE )
ifelse( c(3:10)==3, TRUE, FALSE )
year = as.numeric(year)
hist(2012 - year - sf$age)
age.columns = cbind( (2012 - year) , sf$age)
age.columns
plot( age.columns )
pdf("stop-n-frisk-1.pdf", family = "Helvetica", width = 6, height = 6)
hist(sf$age, breaks=20)
plot( age.columns )
dev.off()
install.packages("ggplot2", "plyr")
